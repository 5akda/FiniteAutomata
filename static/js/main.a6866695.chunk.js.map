{"version":3,"sources":["images/base.png","images/init-1.png","images/init-2.png","images/init-3.png","images/init-c.png","images/init-empty.png","images/trap-123c.png","images/trap-empty.png","images/s1-1.png","images/s1-2.png","images/s1-3.png","images/s1-c.png","images/s1-empty.png","images/s2-1.png","images/s2-2.png","images/s2-3.png","images/s2-c.png","images/s2-empty.png","images/s3-1.png","images/s3-2.png","images/s3-3.png","images/s3-c.png","images/s3-empty.png","images/2more-123.png","images/2more-c.png","images/2more-empty.png","images/1more-123.png","images/1more-c.png","images/1more-empty.png","images/done-1.png","images/done-2.png","images/done-3.png","images/done-c.png","images/done-empty.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","text","string","reader","nextState","stepCount","img","base","unclickable","this","handleRestartClick","setState","length","presentChar","charAt","s_init","s_trap","nextChar","init1","init2","init3","initempty","initc","trap123c","trapempty","className","size","value","onChange","e","target","onClick","handleEnterClick","handleClearClick","handleNextClick","disabled","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6866695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/base.404faf26.png\";","module.exports = __webpack_public_path__ + \"static/media/init-1.57b60d43.png\";","module.exports = __webpack_public_path__ + \"static/media/init-2.8ceb5be3.png\";","module.exports = __webpack_public_path__ + \"static/media/init-3.a12941ba.png\";","module.exports = __webpack_public_path__ + \"static/media/init-c.27f91b28.png\";","module.exports = __webpack_public_path__ + \"static/media/init-empty.039e7f3c.png\";","module.exports = __webpack_public_path__ + \"static/media/trap-123c.492901d7.png\";","module.exports = __webpack_public_path__ + \"static/media/trap-empty.cbcfa528.png\";","module.exports = __webpack_public_path__ + \"static/media/s1-1.7d7f40c6.png\";","module.exports = __webpack_public_path__ + \"static/media/s1-2.2bd0135f.png\";","module.exports = __webpack_public_path__ + \"static/media/s1-3.efb97987.png\";","module.exports = __webpack_public_path__ + \"static/media/s1-c.1628b48b.png\";","module.exports = __webpack_public_path__ + \"static/media/s1-empty.27079354.png\";","module.exports = __webpack_public_path__ + \"static/media/s2-1.598671d5.png\";","module.exports = __webpack_public_path__ + \"static/media/s2-2.c1b3ae28.png\";","module.exports = __webpack_public_path__ + \"static/media/s2-3.fcf04a76.png\";","module.exports = __webpack_public_path__ + \"static/media/s2-c.9ed3b85f.png\";","module.exports = __webpack_public_path__ + \"static/media/s2-empty.6cca747f.png\";","module.exports = __webpack_public_path__ + \"static/media/s3-1.c2ddad53.png\";","module.exports = __webpack_public_path__ + \"static/media/s3-2.6376c64b.png\";","module.exports = __webpack_public_path__ + \"static/media/s3-3.0999c1d9.png\";","module.exports = __webpack_public_path__ + \"static/media/s3-c.7e8d3f58.png\";","module.exports = __webpack_public_path__ + \"static/media/s3-empty.bd383563.png\";","module.exports = __webpack_public_path__ + \"static/media/2more-123.f40ae62c.png\";","module.exports = __webpack_public_path__ + \"static/media/2more-c.4ce3c98a.png\";","module.exports = __webpack_public_path__ + \"static/media/2more-empty.fbce47db.png\";","module.exports = __webpack_public_path__ + \"static/media/1more-123.ba75d7e6.png\";","module.exports = __webpack_public_path__ + \"static/media/1more-c.3b9bb039.png\";","module.exports = __webpack_public_path__ + \"static/media/1more-empty.2242a2d6.png\";","module.exports = __webpack_public_path__ + \"static/media/done-1.25c848c7.png\";","module.exports = __webpack_public_path__ + \"static/media/done-2.59f17a50.png\";","module.exports = __webpack_public_path__ + \"static/media/done-3.6750e49c.png\";","module.exports = __webpack_public_path__ + \"static/media/done-c.cd0bef53.png\";","module.exports = __webpack_public_path__ + \"static/media/done-empty.ab969da2.png\";","import React, { useState, Component } from 'react'\nimport './App.css'\n\nimport base from './images/base.png'\n\nimport s11 from './images/s1-1.png'\nimport s12 from './images/s1-2.png'\nimport s13 from './images/s1-3.png'\nimport s1c from './images/s1-c.png'\nimport s1empty from './images/s1-empty.png'\n\nimport s21 from './images/s2-1.png'\nimport s22 from './images/s2-2.png'\nimport s23 from './images/s2-3.png'\nimport s2c from './images/s2-c.png'\nimport s2empty from './images/s2-empty.png'\n\nimport s31 from './images/s3-1.png'\nimport s32 from './images/s3-2.png'\nimport s33 from './images/s3-3.png'\nimport s3c from './images/s3-c.png'\nimport s3empty from './images/s3-empty.png'\n\nimport init1 from './images/init-1.png'\nimport init2 from './images/init-2.png'\nimport init3 from './images/init-3.png'\nimport initc from './images/init-c.png'\nimport initempty from './images/init-empty.png'\n\nimport trap123c from './images/trap-123c.png'\nimport trapempty from './images/trap-empty.png'\n\nimport more2coins123 from './images/2more-123.png'\nimport more2coinsc from './images/2more-c.png'\nimport more2coinsempty from './images/2more-empty.png'\n\nimport more1coins123 from './images/1more-123.png'\nimport more1coinsc from './images/1more-c.png'\nimport more1coinsempty from './images/1more-empty.png'\n\nimport done1 from './images/done-1.png'\nimport done2 from './images/done-2.png'\nimport done3 from './images/done-3.png'\nimport donec from './images/done-c.png'\nimport doneempty from './images/done-empty.png'\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      text: '',\n      string: '',\n      reader: '',\n      nextState: 's_init',\n      stepCount: 0,\n      img: base,\n      unclickable: true\n    }\n  }\n\n  handleEnterClick(){\n    this.handleRestartClick()\n    this.setState({ \n      string: this.state.text,\n      unclickable: false,\n     })\n  }\n\n  handleNextClick(){\n    if(this.state.stepCount < this.state.string.length) {\n      let presentChar = this.state.string.charAt(this.state.stepCount)\n      switch(this.state.nextState){\n        case 's_init': {\n          this.s_init(presentChar)\n          break\n        }\n        case 's_trap': {\n          this.s_trap(presentChar)\n        }\n      }\n      this.setState({\n        stepCount: this.state.stepCount+1,\n        reader: this.state.reader + '^'\n      })\n    }\n\n    else if(this.state.stepCount == this.state.string.length) {\n      let end = ''\n      switch(this.state.nextState){\n        case 's_init': {\n          this.s_init(end)\n          break\n        }\n        case 's_trap': {\n          this.s_trap(end)\n        }\n      }\n      this.setState({\n        stepCount: this.state.stepCount+1,\n        reader: this.state.reader + '^'\n      })\n    }\n  }\n\n  handleRestartClick(){\n    this.setState({\n      reader: '',\n      nextState: 's_init',\n      stepCount: 0,\n      img: base,\n    })\n  }\n\n  handleClearClick(){\n    this.setState({\n      text: '',\n      string: '',\n      reader: '',\n      nextState: 's_init',\n      stepCount: 0,\n      img: base,\n      unclickable: true\n    })\n  }\n\n  s_init(nextChar) {\n    switch(nextChar) {\n      case '1': {\n        this.setState({ img: init1, nextState: 's_station1' })\n        break\n      }\n      case '2': {\n        this.setState({ img: init2, nextState: 's_station2' })\n        break\n      }\n      case '3': {\n        this.setState({ img: init3, nextState: 's_station3' })\n        break\n      }\n      case ' ': {\n        this.setState({ img: initempty })\n        break\n      }\n      default: {\n        this.setState({ img: initc, nextState: 's_trap' })\n        break\n      }\n\n    }\n  }\n\n  s_trap(nextChar) {\n    switch(nextChar) {\n      case '1': case '2': case '3': case 'C': {\n        this.setState({ img: trap123c })\n        break\n      }\n      default: {\n        this.setState({ img: trapempty })\n        break\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Layout-all\">\n        \n        <div className=\"Layout-header\">\n          Finite Automata - Ticket Vending Machine\n        </div>\n\n        <div className=\"Layout-input\">\n          Input String:\n          <input className=\"input\" size=\"20\" value={this.state.text}\n            onChange={(e)=>this.setState({text: e.target.value})}/>\n\n          <button className=\"enterbutton\"\n            onClick={()=>this.handleEnterClick()}>Enter\n          </button>\n\n          <button className=\"clearbutton\"\n            onClick={()=>this.handleClearClick()}>Clear\n          </button>\n        </div>\n\n        <div className=\"Layout-controller\">\n          <b className=\"string\">{this.state.string}</b>\n\n          <button className=\"nextbutton\" onClick={()=>this.handleNextClick()} \n            disabled={this.state.unclickable}>Next\n          </button>\n          \n          <button className=\"restartbutton\"\n            disabled={this.state.unclickable}>Autoplay\n          </button>\n\n          <button className=\"restartbutton\" onClick={()=>this.handleRestartClick()}\n            disabled={this.state.unclickable}>Restart\n          </button>\n\n          <br/>\n          <b className=\"reader\">{this.state.reader}</b>\n        </div>\n\n        <div className=\"Layout-body\">\n          <img src={this.state.img} alt=\"img\"/>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n//npm start\n//npm run deploy","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}